name  = "Highway MPG"
)
) +
expand_limits(y = c(0,0.30))
g2
g3 <- g2 +
theme_tq() +
scale_color_manual(values = c(
palette_light()[["red"]],
palette_light()[["blue"]]
)) +
scale_fill_manual(values = palette_light()[["blue"]]) +
theme(
legend.position    = "none",
axis.title.y.right = element_text(color = palette_light()[["red"]]),
axis.text.y.right  = element_text(color = palette_light()[["red"]])
) +
labs(title = "Dual Y-Axis Plot: Vehicle Class Proportion vs Fuel Economy")
g3
runif(30)
geom_col(runif(30))
geom_col(aes(y = runif(30))
)
ggplot(aes(x = class)) + geom_col(aes(y = runif(30))
)
ggplot(aes(x = class)) + geom_col(aes(y = as.data.frame(runif(30)))
)
bike_orders_csv_tbl <- readr::read_csv("R class/DS4B_101_R_Business_Analysis/00_data/bike_sales/data_wrangled/bike_orderlines.csv")
readr::problems(bike_orders_csv_tbl)
bike_orders_csv_tbl
bike_orders_csv_tbl
bike_orders_csv_tbl
readr::problems(bike_orders_csv_tbl)
bike_orders_csv_tbl %>%
slice(7916)
bike_orders_rds_tbl <- readr::read_rds("R class/DS4B_101_R_Business_Analysis/00_data/bike_sales/data_wrangled/bike_orderlines.rds")
bike_orders_rds_tbl
con <- RSQLite::dbConnect(drv = SQLite(), dbname = "R class/DS4B_101_R_Business_Analysis/00_data/Chinook_Sqlite.sqlite")
con <- RSQLite::dbConnect(drv = SQLite(), dbname = "R class/DS4B_101_R_Business_Analysis/00_data/chinook/Chinook_Sqlite.sqlite")
library(odbc)
library(RSQLite)
con <- RSQLite::dbConnect(drv = SQLite(), dbname = "R class/DS4B_101_R_Business_Analysis/00_data/chinook/Chinook_Sqlite.sqlite")
dbListTables(con)
tbl(con, "Album")
tbl(con, "Album") %>% collect()
album_tbl <- tbl(con, "Album") %>% collect()
album_tbl <- tbl(con, "Album") %>% collect()
tbl(con, "Artist")
tbl(con, "Artist") %>% collect()
dbDisconnect(con)
con
library(tidyverse)
library(readxl)
bikes_tbl           <- read_excel("00_data/bike_sales/data_raw/bikes.xlsx")
library(tidyverse)
library(readxl)
bikes_tbl           <- read_excel("R class/DS4B_101_R_Business_Analysis/00_data/bike_sales/data_raw/bikes.xlsx")
orderlines_tbl      <- read_excel("R class/DS4B_101_R_Business_Analysis/00_data/bike_sales/data_raw/orderlines.xlsx")
bike_orderlines_tbl <- read_rds("R class/DS4B_101_R_Business_Analysis/00_data/bike_sales/data_wrangled/bike_orderlines.rds")
mtcars %>%  group_by(cyl) %>% summarise(avg = mean(mpg))
newtibble <- tibble(letter = c(a,b,c), func = c(mean, mediam, sd))
newtibble <- tibble(letter = c(a,b,c), func = c(mean, median, sd))
newtibble <- tibble(id = c(a,b,c), func = c(mean, median, sd))
newtibble <- tibble(letter = c("a","b","c"), func = c(mean, median, sd))
newtibble
newtibble <- tibble(letter = c("a","b","c"), number = c(1, 2, 3))
newtibble
tibble2 <- tibble(letter = c("a","m","c"), number = c(1, 2, 3))
left_join(newtibble, tibble2, by = c("letter" = "letter"))
right_join(newtibble, tibble2, by = c("letter" = "letter"))
right_join(tibble2, newtibble, by = c("letter" = "letter"))
lj <- left_join(newtibble, tibble2, by = c("letter" = "letter"))
right_join(lj, tibble2, by = c("letter" = "letter"))
bike_orderlines_tbl %>%
select(,1:3)
bike_orderlines_tbl %>%
select(order_date, total_price, category_1, category_2)
bike_orderlines_tbl
bike_orderlines_tbl %>%
select(bikeshop_name:state)
bike_orderlines_tbl %>%
select(bikeshop_name:state, everything())
bike_orderlines_tbl %>%
select_if(is.character)
bike_orderlines_tbl %>%
select_if(!is.character)
bike_orderlines_tbl %>%
select_if(!(is.character))
bike_orderlines_tbl %>%
select_if(~ !is.numeric(.))
bikes_tbl   %>%
select(model, price) %>%
arrange(price)
bikes_tbl   %>%
select(model, price) %>%
arrange(desc(price))
bikes_tbl   %>%
select(model, price) %>%
arrange(desc(price)) %>%
View()
bikes_tbl %>%
select(model, price) %>%
filter(price > mean(price))
bikes_tbl %>%
select(model, price) %>%
filter((price > 5000) | (price < 1000)) %>%
arrange(desc(price))
bikes_tbl %>%
select(model, price) %>%
filter(price > 6000,
model %>% str_detect("Supersix"))
bikes_tbl %>%
select(model, price) %>%
filter(model %>% str_detect("Supersix"))
bike_orderlines_tbl %>%
filter(category_2 %in% c("Over Mountain", "Trail"))
bike_orderlines_tbl %>%
filter(category_2 %in% c("Over Mountain"))
bike_orderlines_tbl %>%
filter(category_2 == "Over Mountain")
bike_orderlines_tbl %>%
filter(category_2 %in% c("Over Mountain", "Trail", "Endurance Road"))
bike_orderlines_tbl
bike_orderlines_tbl %>%
filter(category_2 %in% c("Over Mountain", "Trail", "Endurance Road"))
bike_orderlines_tbl %>%
filter(!(category_2 %in% c("Over Mountain", "Trail", "Endurance Road"))
bike_orderlines_tbl %>%
filter(!(category_2 %in% c("Over Mountain", "Trail", "Endurance Road")))
bikes_tbl %>%
arrange(desc(price)) %>%
slice(1:5)
bikes_tbl %>%
arrange(price) %>%
slice(1:5)
bikes_tbl %>%
arrange(desc(price)) %>%
slice(93:97)
bikes_tbl %>%
arrange(desc(price)) %>%
slice(nrow(.)-4:nrow(.))
bike_orderlines_tbl %>% distinct(category_1)
bike_orderlines_tbl %>%
distinct(category_1, category_2)
bike_orderlines_tbl %>%
distinct(bikeshop_name, city, state)
bikes_tbl
orderlines_tbl
bike_orderlines_tbl
bike_orderlines_prices
bike_orderlines_prices
bike_orderlines_prices <- bike_orderlines_tbl %>%
select(order_date, model, quantity, price) %>%
mutate(total_price = quantity * price)
bike_orderlines_prices
bike_orderlines_prices %>%
mutate(total_price = log(total_price))
bike_orderlines_prices %>%
mutate(is_supersix = model %>% str_to_lower() %>% str_detect("supersix"))
filter(is_supersix)
bike_orderlines_prices %>%
mutate(is_supersix = model %>% str_to_lower() %>% str_detect("supersix")) %>%
filter(is_supersix)
bike_orderlines_prices %>%
mutate(total_prices_binned = ntile(total_price, 3))
source("~/R class/DS4B_101_R_Business_Analysis/02_data_wrangling/02_data_wrangling.R", echo=TRUE)
bike_orderlines_prices %>%
mutate(total_price_binned = ntile(totalprice, 3)) %>%
mutate(total_price_binned2 = case_when(
total_price > quantile(total_price, 0.66) ~ "High",
total_price > quantile(total_price, 0.66) ~ "Medium",
TRUE ~ "Low"
))
total_price_binned <- bike_orderlines_prices %>%
mutate(total_prices_binned = ntile(total_price, 3))
#case_when - more flexible binning
bike_orderlines_prices %>%
mutate(total_price_binned = ntile(totalprice, 3)) %>%
mutate(total_price_binned2 = case_when(
total_price > quantile(total_price, 0.66) ~ "High",
total_price > quantile(total_price, 0.66) ~ "Medium",
TRUE ~ "Low"
))
bike_orderlines_prices
bike_orderlines_prices <- bike_orderlines_tbl %>%
select(order_date, model, quantity, price) %>%
mutate(total_price = quantity * price)
bike_orderlines_prices %>%
mutate(total_price = log(total_price))
bike_orderlines_prices %>%
mutate(is_supersix = model %>% str_to_lower() %>% str_detect("supersix")) %>%
filter(is_supersix)
bike_orderlines_prices %>%
mutate(total_prices_binned = ntile(total_price, 3))
bike_orderlines_prices %>%
mutate(total_price_binned = ntile(totalprice, 3)) %>%
mutate(total_price_binned2 = case_when(
total_price > quantile(total_price, 0.66) ~ "High",
total_price > quantile(total_price, 0.66) ~ "Medium",
TRUE ~ "Low"
))
bike_orderlines_prices %>%
mutate(total_price_binned = ntile(total_price, 3)) %>%
mutate(total_price_binned2 = case_when(
total_price > quantile(total_price, 0.66) ~ "High",
total_price > quantile(total_price, 0.66) ~ "Medium",
TRUE ~ "Low"
))
bike_orderlines_prices %>%
mutate(total_price_binned = ntile(total_price, 3)) %>%
mutate(total_price_binned2 = case_when(
total_price > quantile(total_price, 0.66) ~ "High",
total_price > quantile(total_price, 0.33) ~ "Medium",
TRUE ~ "Low"
))
bike_orderlines_prices %>%
mutate(bike_type = case_when(
model %>%  str_to_lower() %>%  str_detect("supersix") ~ "Supersix",
))
bike_orderlines_prices %>%
mutate(bike_type = case_when(
model %>%  str_to_lower() %>%  str_detect("supersix") ~ "Supersix",
model %>%  str_to_lower() %>%  str_detect("jpersix") ~ "Supersix",
TRUE ~ "Not SUpersix or Jekyll"
))
bike_orderlines_tbl %>%
group_by(category_1) %>%
summmarise(revenue = sum(total_price))
bike_orderlines_tbl %>%
group_by(category_1) %>%
summarise(revenue = sum(total_price))
bike_orderlines_tbl %>%
summarise(revenue = sum(total_price))
bike_orderlines_tbl %>%
group_by(category_1) %>%
summarise(revenue = sum(total_price))
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarise(revenue = sum(total_price))
bike_orderlines_tbl %>%
group_by(category_1) %>%
summarise(revenue = sum(total_price)) %>%
ungroup()
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarise(revenue = sum(total_price)) %>%
ungroup()
bike_orderlines_tbl %>%
group_by(category_1, category_2, frame_material) %>%
summarise(revenue = sum(total_price)) %>%
ungroup() %>%
arrange(desc(revenue))
bike_orderlines_tbl %>%
group_by(category_1, category_2, frame_material) %>%
summarise(revenue = sum(total_price))
bike_orderlines_tbl %>%
group_by(category_1, category_2, frame_material)
#Summary functions
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarize(
count = n()
) %>%
ungroup() %>%
arrange(desc(count))
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarize(
count = n(),
avg = mean(total_price),
med = mediam(total_price)
) %>%
ungroup() %>%
arrange(desc(count))
#Summary functions
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarize(
count = n(),
avg = mean(total_price),
med = median(total_price)
) %>%
ungroup() %>%
arrange(desc(count))
#Summary functions
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarize(
count = n(),
avg = mean(total_price),
med = median(total_price)
) %>%
ungroup() %>%
arrange(desc(count))
#Summary functions
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarize(
count = n(),
avg = mean(total_price),
med = median(total_price),
sd = sd(total_price)
) %>%
ungroup() %>%
arrange(desc(count))
#Summary functions
bike_orderlines_tbl %>%
group_by(category_1, category_2) %>%
summarize(
count = n(),
avg = mean(total_price),
med = median(total_price),
sd = sd(total_price),
min = min(total_price),
max = max(total_price)
) %>%
ungroup() %>%
arrange(desc(count))
mutate(total_price = c(rep(NA, 4))
bike_orderlines_tbl %>%
bike_orderlines_tbl %>%
mutate(total_price = c(rep(NA, 4)))
rep(NA, 4)
bike_orderlines_tbl %>%
mutate(total_price = c(rep(NA, 4), total_price[5:nrow(.)]))
bike_orderlines_missing <- bike_orderlines_tbl %>%
mutate(total_price = c(rep(NA, 4), total_price[5:nrow(.)]))
bike_orderlines_missing %>%
summarise_all(~ sum(is.na(.)))
bike_orderlines_missing %>%
summarise_all(~ sum(is.na(.)) / length(.))
bike_orderlines_missing %>%
filter(!is.na(total_price))
install.packages("olr")
?olr
??olr
library(olr)
?olr
file
file <- system.file("extdata", "oildata.csv", package = "olr", mustWork = TRUE)
oildata <- read.csv(file, header = T
)
file
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# Projected price on May 15, 2025
projected_price_may <- exponential_model(c(a, b), length(price_values) + days_to_may)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
library(tensorflow)
library(R6)
library(cluster)
library(fpc)
library(tibble)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(gridExtra)
library(olr)
library(rlist)
library(writexl)
library(readxl)
library(tidyr)
library(purrr)
library(pracma)
library(randomForest)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
setwd("~/R/DESONN")
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("C:/Users/wfky1/OneDrive/Documents/R/DESONN/optimizers.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("C:/Users/wfky1/OneDrive/Documents/R/DESONN/optimizers.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("C:/Users/wfky1/OneDrive/Documents/R/DESONN/optimizers.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("C:/Users/wfky1/OneDrive/Documents/R/DESONN/optimizers.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
source("~/R/DESONN/DESONN.R", echo=TRUE)
source("~/R/DESONN/TestDESONN.R", echo=TRUE)
