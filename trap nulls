# 1) Set traps
trace(base::print,
      tracer = quote({
        if (is.null(x)) { cat("\n<base::print got NULL>\n"); utils::str(sys.calls()) }
      }),
      print = FALSE)

if ("print.default" %in% methods("print")) {
  trace("print.default",
        tracer = quote({
          if (is.null(x)) { cat("\n<print.default got NULL>\n"); utils::str(sys.calls()) }
        }),
        print = FALSE)
}

if (requireNamespace("ggplot2", quietly = TRUE)) {
  pg <- getS3method("print", "ggplot", optional = TRUE)
  if (!is.null(pg)) {
    trace(pg,
          tracer = quote({ cat("\n<print.ggplot called>\n"); utils::str(sys.calls()) }),
          print = FALSE)
  }
}

# 2) Run with echo so you see the line before the NULL shows
source("TestDESONN.R", echo = TRUE, max.deparse.length = Inf)

# 3) Clean up
untrace(base::print)
if ("print.default" %in% methods("print")) untrace("print.default")
if (exists("pg") && !is.null(pg)) suppressWarnings(untrace(getS3method("print","ggplot", optional = TRUE)))


#########################

trace(base::print, tracer = quote({
  if (is.logical(x) && length(x)==1L && isTRUE(x)) {
    cat("\n<printed TRUE>\n"); utils::str(sys.calls())
  }
}), print = FALSE)

# ... run your code ...

untrace(base::print)


